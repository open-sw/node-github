/**
 * @module gists
 **/
/**
 * @name module:github.Client#gists
 * @type {module:gists}
 **/
/**
 * @module gitdata
 **/
/**
 * @name module:github.Client#gitdata
 * @type {module:gitdata}
 **/
/**
 * @module issues
 **/
/**
 * @name module:github.Client#issues
 * @type {module:issues}
 **/
/**
 * @module authorization
 **/
/**
 * @name module:github.Client#authorization
 * @type {module:authorization}
 **/
/**
 * @module orgs
 **/
/**
 * @name module:github.Client#orgs
 * @type {module:orgs}
 **/
/**
 * @module statuses
 **/
/**
 * @name module:github.Client#statuses
 * @type {module:statuses}
 **/
/**
 * @module pullRequests
 **/
/**
 * @name module:github.Client#pullRequests
 * @type {module:pullRequests}
 **/
/**
 * @module repos
 **/
/**
 * @name module:github.Client#repos
 * @type {module:repos}
 **/
/**
 * @module user
 **/
/**
 * @name module:github.Client#user
 * @type {module:user}
 **/
/**
 * @module events
 **/
/**
 * @name module:github.Client#events
 * @type {module:events}
 **/
/**
 * @module search
 **/
/**
 * @name module:github.Client#search
 * @type {module:search}
 **/
/**
 * @module markdown
 **/
/**
 * @name module:github.Client#markdown
 * @type {module:markdown}
 **/
/** 
 * @method module:gists#getAll
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#getFromUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#create
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} [msg.description]
 * @param {Boolean} msg.public
 * @param {Json} msg.files Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#edit
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} [msg.description]
 * @param {Json} msg.files Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#public
 * @returns null
 * @param {Object} msg No params, simply pass an empty Object literal `{}`
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#starred
 * @returns null
 * @param {Object} msg No params, simply pass an empty Object literal `{}`
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#get
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#star
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#deleteStar
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#checkStar
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#fork
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gists#delete
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#getBlob
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#createBlob
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.content
 * @param {String} msg.encoding
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#getCommit
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#createCommit
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.message String of the commit message
 * @param {String} msg.tree String of the SHA of the tree object this commit points to
 * @param {Array} msg.parents Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided.
 * @param {Json} [msg.author]
 * @param {Json} [msg.committer]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#getReference
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.ref String of the name of the fully qualified reference (ie: heads/master). If it doesnâ€™t have at least one slash, it will be rejected.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#getAllReferences
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#createReference
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.ref String of the name of the fully qualified reference (ie: heads/master). If it doesnâ€™t have at least one slash, it will be rejected.
 * @param {String} msg.sha Sha hash
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#updateReference
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.ref String of the name of the fully qualified reference (ie: heads/master). If it doesnâ€™t have at least one slash, it will be rejected.
 * @param {String} msg.sha Sha hash
 * @param {Boolean} [msg.force] Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure youâ€™re not overwriting work.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#deleteReference
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.ref String of the name of the fully qualified reference (ie: heads/master). If it doesnâ€™t have at least one slash, it will be rejected.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#getTag
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#createTag
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.tag String of the tag
 * @param {String} msg.message String of the tag message
 * @param {String} msg.object String of the SHA of the git object this is tagging
 * @param {String} msg.type String of the type of the object weâ€™re tagging. Normally this is a commit but it can also be a tree or a blob.
 * @param {Json} msg.tagger JSON object that contains the following keys: `name` - String of the name of the author of the tag, `email` - String of the email of the author of the tag, `date` - Timestamp of when this object was tagged
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#getTree
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {Boolean} [msg.recursive]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:gitdata#createTree
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Json} msg.tree Array of Hash objects (of path, mode, type and sha) specifying a tree structure
 * @param {String} [msg.base_tree] String of the SHA1 of the tree you want to update with new data
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getAll
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} [msg.filter] Validation rule: ` ^(assigned|created|mentioned|subscribed)$ `.
 * @param {String} [msg.state] Validation rule: ` ^(open|closed)$ `.
 * @param {String} [msg.labels] String list of comma separated Label names. Example: bug,ui,@high
 * @param {String} [msg.sort] Validation rule: ` ^(created|updated|comments)$ `.
 * @param {String} [msg.direction] Validation rule: ` ^(asc|desc)$ `.
 * @param {Date} [msg.since] string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#repoIssues
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.milestone] Validation rule: ` ^([0-9]+|none|\*)$ `.
 * @param {String} [msg.state] open or closed Validation rule: ` ^(open|closed)$ `.
 * @param {String} [msg.assignee] String User login, `none` for Issues with no assigned User. `*` for Issues with any assigned User.
 * @param {String} [msg.mentioned] String User login.
 * @param {String} [msg.labels] String list of comma separated Label names. Example: bug,ui,@high
 * @param {String} [msg.sort] Validation rule: ` ^(created|updated|comments)$ `.
 * @param {String} [msg.direction] Validation rule: ` ^(asc|desc)$ `.
 * @param {Date} [msg.since] string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getRepoIssue
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#create
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.title
 * @param {String} [msg.body]
 * @param {String} [msg.assignee] Login for the user that this issue should be assigned to.
 * @param {Number} [msg.milestone] Milestone to associate this issue with. Validation rule: ` ^[0-9]+$ `.
 * @param {Json} msg.labels Labels to associate with this issue.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#edit
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} msg.title
 * @param {String} [msg.body]
 * @param {String} [msg.assignee] Login for the user that this issue should be assigned to.
 * @param {Number} [msg.milestone] Milestone to associate this issue with. Validation rule: ` ^[0-9]+$ `.
 * @param {Json} msg.labels array of strings - Labels to associate with this issue.
 * @param {String} [msg.state] open or closed Validation rule: ` ^(open|closed)$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getComments
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#createComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} msg.body
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#editComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {String} msg.body
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#deleteComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getEvents
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getRepoEvents
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getEvent
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getLabels
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getLabel
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.name
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#createLabel
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.name
 * @param {String} msg.color 6 character hex code, without a leading #.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#updateLabel
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.name
 * @param {String} msg.color 6 character hex code, without a leading #.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#deleteLabel
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.name
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getAllMilestones
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.state] Validation rule: ` ^(open|closed)$ `.
 * @param {String} [msg.sort] due_date, completeness, default: due_date Validation rule: ` ^(due_date|completeness)$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#getMilestone
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#createMilestone
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.title
 * @param {String} [msg.state] Validation rule: ` ^(open|closed)$ `.
 * @param {String} [msg.description]
 * @param {Date} [msg.due_on] ISO 8601 time.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#updateMilestone
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} msg.title
 * @param {String} [msg.state] Validation rule: ` ^(open|closed)$ `.
 * @param {String} [msg.description]
 * @param {Date} [msg.due_on] ISO 8601 time.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:issues#deleteMilestone
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:authorization#getAll
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:authorization#get
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:authorization#create
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Array} [msg.scopes] A list of scopes that this authorization is in.
 * @param {String} [msg.note] A note to remind you what the OAuth token is for.
 * @param {String} [msg.note_url] A URL to remind you what app the OAuth token is for.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:authorization#update
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Array} [msg.scopes] A list of scopes that this authorization is in.
 * @param {Array} [msg.add_scopes] A list of scopes to add to this authorization.
 * @param {Array} [msg.remove_scopes] A list of scopes to remove from this authorization.
 * @param {String} [msg.note] A note to remind you what the OAuth token is for.
 * @param {String} [msg.note_url] A URL to remind you what app the OAuth token is for.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:authorization#delete
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getFromUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#get
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#update
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} [msg.billing_email] Billing email address. This address is not publicized.
 * @param {String} [msg.company]
 * @param {String} [msg.email] Publicly visible email address.
 * @param {String} [msg.location]
 * @param {String} [msg.name]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getMembers
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getMember
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#removeMember
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getPublicMembers
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getPublicMember
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#publicizeMembership
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#concealMembership
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getTeams
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getTeam
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#createTeam
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} msg.name
 * @param {Array} [msg.repo_names] array of strings
 * @param {String} [msg.permission] `pull` - team members can pull, but not push or administer this repositories (Default), `push` - team members can pull and push, but not administer this repositores, `admin` - team members can pull, push and administer these repositories. Validation rule: ` ^(pull|push|admin)$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#updateTeam
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.name
 * @param {String} [msg.permission] `pull` - team members can pull, but not push or administer this repositories (Default), `push` - team members can pull and push, but not administer this repositores, `admin` - team members can pull, push and administer these repositories. Validation rule: ` ^(pull|push|admin)$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#deleteTeam
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getTeamMembers
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getTeamMember
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#addTeamMember
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#deleteTeamMember
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getTeamRepos
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#getTeamRepo
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.user Github user
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#addTeamRepo
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.user Github user
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:orgs#deleteTeamRepo
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.user Github user
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:statuses#get
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:statuses#create
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {String} msg.state State of the status - can be one of pending, success, error, or failure. Validation rule: ` ^(pending|success|error|failure)$ `.
 * @param {String} [msg.target_url] Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the â€˜sourceâ€™ of the Status.
 * @param {String} [msg.description] Short description of the status.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#getAll
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.state] Validation rule: ` ^(open|closed)$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#get
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#create
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.title
 * @param {String} [msg.body]
 * @param {String} msg.base The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.
 * @param {String} msg.head The branch (or git ref) where your changes are implemented.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#createFromIssue
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.issue Validation rule: ` ^[0-9]+$ `.
 * @param {String} msg.base The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.
 * @param {String} msg.head The branch (or git ref) where your changes are implemented.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#update
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} [msg.state] Validation rule: ` ^(open|closed)$ `.
 * @param {String} msg.title
 * @param {String} [msg.body]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#getCommits
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#getFiles
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#getMerged
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#merge
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} [msg.commit_message] The message that will be used for the merge commit
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#getComments
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#getComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#createComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} msg.body
 * @param {String} msg.commit_id Sha of the commit to comment on.
 * @param {String} msg.path Relative path of the file to comment on.
 * @param {Number} msg.position Column index in the diff to comment on.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#createCommentReply
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} msg.body
 * @param {Number} msg.in_reply_to
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#updateComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {String} msg.body
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:pullRequests#deleteComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} msg.number Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getAll
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} [msg.type] Possible values: `all`, `owner`, `public`, `private`, `member`. Default: `all`. Validation rule: ` ^(all|owner|public|private|member)$ `.
 * @param {String} [msg.sort] Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. Validation rule: ` ^(created|updated|pushed|full_name)$ `.
 * @param {String} [msg.direction] Validation rule: ` ^(asc|desc)$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getFromUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {String} [msg.type] Possible values: `all`, `owner`, `member`. Default: `public`. Validation rule: ` ^(all|owner|member)$ `.
 * @param {String} [msg.sort] Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. Validation rule: ` ^(created|updated|pushed|full_name)$ `.
 * @param {String} [msg.direction] Validation rule: ` ^(asc|desc)$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getFromOrg
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} [msg.type] Possible values: `all`, `public`, `member`. Default: `all`. Validation rule: ` ^(all|public|member)$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#create
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.name
 * @param {String} [msg.description]
 * @param {String} [msg.homepage]
 * @param {Boolean} [msg.private] true to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.
 * @param {Boolean} [msg.has_issues] true to enable issues for this repository, false to disable them. Default is true.
 * @param {Boolean} [msg.has_wiki] true to enable the wiki for this repository, false to disable it. Default is true.
 * @param {Boolean} [msg.has_downloads] true to enable downloads for this repository, false to disable them. Default is true.
 * @param {Boolean} [msg.auto_init] true to create an initial commit with empty README. Default is false
 * @param {String} [msg.gitignore_template] Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#createFromOrg
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {String} msg.name
 * @param {String} [msg.description]
 * @param {String} [msg.homepage]
 * @param {Boolean} [msg.private] true to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.
 * @param {Boolean} [msg.has_issues] true to enable issues for this repository, false to disable them. Default is true.
 * @param {Boolean} [msg.has_wiki] true to enable the wiki for this repository, false to disable it. Default is true.
 * @param {Boolean} [msg.has_downloads] true to enable downloads for this repository, false to disable them. Default is true.
 * @param {Boolean} [msg.auto_init] true to create an initial commit with empty README. Default is false
 * @param {String} [msg.gitignore_template] Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.
 * @param {Number} [msg.team_id] The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#get
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#update
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.name
 * @param {String} [msg.description]
 * @param {String} [msg.homepage]
 * @param {Boolean} [msg.private] true to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.
 * @param {Boolean} [msg.has_issues] true to enable issues for this repository, false to disable them. Default is true.
 * @param {Boolean} [msg.has_wiki] true to enable the wiki for this repository, false to disable it. Default is true.
 * @param {Boolean} [msg.has_downloads] true to enable downloads for this repository, false to disable them. Default is true.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#delete
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#merge
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.base The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.
 * @param {String} msg.head The branch (or git ref) where your changes are implemented.
 * @param {String} [msg.commit_message] Commit message to use for the merge commit. If omitted, a default message will be used.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getContributors
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Boolean} [msg.anon] Set to 1 or true to include anonymous contributors in results.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getLanguages
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getTeams
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getTags
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getBranches
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getBranch
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.branch Git branch
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getCollaborators
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getCollaborator
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.collabuser
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#addCollaborator
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.collabuser
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#removeCollaborator
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.collabuser
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getCommits
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.sha] Sha or branch to start listing commits from.
 * @param {String} [msg.path] Only commits containing this file path will be returned.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Date} [msg.since] string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getCommit
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getAllCommitComments
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getCommitComments
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#createCommitComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.sha Sha hash
 * @param {String} msg.body
 * @param {String} msg.commit_id Sha of the commit to comment on.
 * @param {String} [msg.path] Relative path of the file to comment on.
 * @param {Number} [msg.position] Line index in the diff to comment on.
 * @param {Number} [msg.line] Line number in the file to comment on. Defaults to 1.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getCommitComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#updateCommitComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {String} msg.body
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#compareCommits
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.base The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.
 * @param {String} msg.head The branch (or git ref) where your changes are implemented.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#deleteCommitComment
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getReadme
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.ref] The String name of the Commit/Branch/Tag. Defaults to master.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getContent
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.path] The content path.
 * @param {String} [msg.ref] The String name of the Commit/Branch/Tag. Defaults to master.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getArchiveLink
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.archive_format Either tarball or zipball Validation rule: ` ^(tarball|zipball)$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getDownloads
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getDownload
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#deleteDownload
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getForks
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.sort] Possible values: `newest`, `oldest`, `watchers`, default: `newest`. Validation rule: ` ^(newest|oldest|watchers)$ `.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#fork
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} [msg.org] Organization login. The repository will be forked into this organization.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getKeys
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#createKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.title
 * @param {String} msg.key
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#updateKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {String} msg.title
 * @param {String} msg.key
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#deleteKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getWatchers
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getWatched
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getWatchedFromUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getWatching
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#watch
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#unWatch
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getHooks
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getHook
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#createHook
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.name
 * @param {Json} msg.config Required hash - A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.
 * @param {Array} [msg.events] Determines what events the hook is triggered for. Default: `['push']`.
 * @param {Boolean} [msg.active] Determines whether the hook is actually triggered on pushes.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#updateHook
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {String} msg.name
 * @param {Json} msg.config A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.
 * @param {Array} [msg.events] Determines what events the hook is triggered for. This replaces the entire array of events. Default: `['push']`.
 * @param {Array} [msg.add_events] Determines a list of events to be added to the list of events that the Hook triggers for.
 * @param {Array} [msg.remove_events] Determines a list of events to be removed from the list of events that the Hook triggers for.
 * @param {Boolean} [msg.active] Determines whether the hook is actually triggered on pushes.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#testHook
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#deleteHook
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getAllReleases
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getRelease
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#createRelease
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.tag_name
 * @param {String} [msg.target_commitish]
 * @param {String} msg.name
 * @param {String} msg.body
 * @param {Boolean} [msg.draft]
 * @param {Boolean} [msg.prerelease]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#editRelease
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {String} [msg.tag_name]
 * @param {String} [msg.target_commitish]
 * @param {String} [msg.name]
 * @param {String} [msg.body]
 * @param {Boolean} [msg.draft]
 * @param {Boolean} [msg.prerelease]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#deleteRelease
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#listReleaseAssets
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#uploadReleaseAsset
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {String} msg.content_type
 * @param {String} msg.name
 * @param {Buffer} msg.content
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#getReleaseAsset
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#editReleaseAsset
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {String} msg.name
 * @param {String} [msg.label]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:repos#deleteReleaseAsset
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getFrom
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#get
 * @returns null
 * @param {Object} msg No params, simply pass an empty Object literal `{}`
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#update
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} [msg.name]
 * @param {String} [msg.email]
 * @param {String} [msg.blog]
 * @param {String} [msg.company]
 * @param {String} [msg.location]
 * @param {Boolean} [msg.hireable]
 * @param {String} [msg.bio]
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getOrgs
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getEmails
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#addEmails
 * @returns null
 * @param {Object} msg No params, simply pass an empty Object literal `{}`
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#deleteEmails
 * @returns null
 * @param {Object} msg No params, simply pass an empty Object literal `{}`
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getFollowers
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getFollowingFromUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getFollowing
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getFollowUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#followUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#unFollowUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getKeys
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#getKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#createKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.title
 * @param {String} msg.key
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#updateKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {String} msg.title
 * @param {String} msg.key
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:user#deleteKey
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.id
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#get
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getFromRepo
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getFromRepoIssues
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getFromRepoNetwork
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getFromOrg
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.org Github org
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getReceived
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getReceivedPublic
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getFromUser
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getFromUserPublic
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:events#getFromUserOrg
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.user Github user
 * @param {String} msg.org Github org
 * @param {Number} [msg.page] Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.
 * @param {Number} [msg.per_page] A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:search#issues
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.owner Github user or org that owns the repository
 * @param {String} msg.repo Github repository
 * @param {String} msg.state open or closed Validation rule: ` ^(open|closed)$ `.
 * @param {String} msg.keyword Search term
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:search#repos
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.keyword Search term
 * @param {String} [msg.language] Filter results by language, see https://github.com/languages
 * @param {Number} [msg.start_page] Page number to fetch Validation rule: ` ^[0-9]+$ `.
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:search#users
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.keyword Keyword search parameters
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:search#email
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.email Email address
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
/** 
 * @method module:markdown#render
 * @returns null
 * @param {Object} msg Object that contains the parameters and their values to be sent to the server.
 * @param {String} msg.text The Markdown text to render
 * @param {String} [msg.mode] The rendering mode, `markdown` to render a document as plain Markdown, just like README files are rendered. `gfm` to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly. Validation rule: ` ^(markdown|gfm)$ `.
 * @param {String} [msg.context] The repository context, only taken into account when rendering as `gfm`
 * @param {Function} callback Function to call when the request is finished with an error as first argument and result data as second argument.
 **/
